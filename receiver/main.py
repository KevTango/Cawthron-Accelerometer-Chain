from machine import I2C, Pin, UARTfrom lis3dh import LIS3DH, LIS3DH_I2C, RANGE_2_G, DATARATE_1_HZimport timeimport osimport sysimport mathif sys.platform == 'pyboard':  #ADC.width(ADC.WIDTH_12BIT)  #thermistor = ADC(Pin(34))  #thermistor.atten(ADC.ATTN_11DB) # Full range: 3.3v  tx_enable = Pin('X20', Pin.OUT)  uart = UART(6, 9600)  uart.init(9600, bits=8, parity=None, stop=1, timeout=1000)else:  print('Incompatible board detected, please connect pyboard')  i2c = I2C(1)  accelerometer = LIS3DH_I2C(i2c, int1=None)LIS3DH.range = RANGE_2_G # Setting range to 2GLIS3DH.datarate = DATARATE_1_HZ # Setting data rate to 1 Hz# Setting up communication#uart_id = 0x01#modbus_obj = Serial(uart_id)while True:  tx_enable.value(1)  # Print X,Y,Z acceleration values in m/s^2  x, y, z = [value for value in accelerometer.acceleration]  xRounded = round(x, 2)  yRounded = round(y, 2)  zRounded = round(z, 2)  print(xRounded, yRounded, zRounded)    # Thermistor (Two approaches, need further testings as code fluctuates  """  voltage = (thermistor.read() / 4095) * 3.3  temp = (voltage - 0.5) * 100  tempRounded = round(temp, 2)  print(tempRounded)    thermistorTest = thermistor.read() / 4095  thermistorTest *= 100  thermistorTest = round(thermistorTest, 2)  print(thermistorTest)  """    #print(uart.write(str(xRounded)))  #uart.write(str(yRounded))  #uart.write(str(zRounded))  #uart.write(str(thermistorTest))    print(uart.write('test\n'))  #print(uart.write(str(xRounded)+'\r\n'))  #print(str(xRounded)+'\r\n')  #print(uart.readline())  #print(uart.write(b'abcd5\r\n'))  #print(uart.read())    print()    pyb.LED(4).on()  time.sleep(0.5)  pyb.LED(4).off()  time.sleep(0.5)  #machine.deepsleep(1000) # Deep sleep