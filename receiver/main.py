# Receiver code for Cawthron Institute's mussel farm accelerometer chain# Author: Kevin Tangfrom machine import I2C, Pin, UARTfrom lis3dh import LIS3DH, LIS3DH_I2C, RANGE_2_G, DATARATE_1_HZfrom pyb import ADCimport timeimport osimport sysimport mathif sys.platform == 'pyboard':  # Initialising pins  thermistor = pyb.ADC('Y12')  tx_enable = Pin('X20', Pin.OUT)  i2c = I2C(1)   uart = UART(6, 9600)  uart.init(9600, bits=8, parity=None, stop=1, timeout=0)else:  print('Incompatible board detected, please connect pyboard')ID = 0 # Receiver ID (0-9). MAKE SURE TO CHANGEaccelerometer = LIS3DH_I2C(i2c, int1=None)LIS3DH.range = RANGE_2_G # Setting range to 2GLIS3DH.datarate = DATARATE_1_HZ # Setting data rate to 1 Hzwhile True:  tx_enable.value(0)  read = uart.read()  idCheck = str(read)[2]  print(idCheck)    # Print X,Y,Z acceleration values in m/s^2  x, y, z = [value for value in accelerometer.acceleration]  xRounded = round(x, 2)  yRounded = round(y, 2)  zRounded = round(z, 2)  print(xRounded, yRounded, zRounded)    # Thermistor readings  thermistorTest = thermistor.read() / 4095  thermistorTest *= 100  thermistorRounded = round(thermistorTest, 2)  print(thermistorRounded)    if(idCheck == str(ID)):    tx_enable.value(1)    print(uart.write(str(ID) + ',' + str(xRounded) + ',' + str(yRounded) + ',' + str(zRounded) + ',' + str(thermistorRounded)))    tx_enable.value(0)    idCheck == str(99) # Arbitary reset number    print()    pyb.LED(4).on()  time.sleep(0.5) 