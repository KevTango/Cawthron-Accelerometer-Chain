# Receiver code for Cawthron Institute's mussel farm accelerometer chain# Author: Kevin Tangfrom machine import I2C, Pin, UARTfrom lis3dh import LIS3DH, LIS3DH_I2C, RANGE_2_G, DATARATE_1_HZfrom pyb import ADCimport timeimport osimport sysimport mathif sys.platform == 'pyboard':  # Initialising pins  thermistor = pyb.ADC('Y12')  tx_enable = Pin('X20', Pin.OUT)  i2c = I2C(1)   uart = UART(6, 9600)  uart.init(9600, bits=8, parity=None, stop=1, timeout=0) # Non-blocking UARTelse:  print('Incompatible board detected, please connect pyboard')ID = 0 # Receiver ID (0-9). MAKE SURE TO CHANGEaccelerometer = LIS3DH_I2C(i2c, int1=None)LIS3DH.range = RANGE_2_G # Setting range to 2GLIS3DH.datarate = DATARATE_1_HZ # Setting data rate to 1 Hz# Buffer values for acceleration valuesxBuffer = 0yBuffer = 0zBuffer = 0# Low power millisecond delaydef msTimer(ms):  if pyb.Pin.board.USB_VBUS.value() == 1: #pyb.stop() will kill USB connection to pyboard    time.sleep((ms/1000))  else:    rtc.wakeup(ms) # Allows the Pyboard to wake up every second    pyb.stop() # Pyboard will enter low power mode to conserve battery life    rtc.wakeup(None)    # Low power minute delaydef minTimer(minute):  if pyb.Pin.board.USB_VBUS.value() == 1: #pyb.stop() will kill USB connection to pyboard    time.sleep((minute*60))  else:    rtc.wakeup((minute*60*1000)) # Allows the Pyboard to wake up every second    pyb.stop() # Pyboard will enter low power mode to conserve battery life    rtc.wakeup(None)while Tru